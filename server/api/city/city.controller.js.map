{"version":3,"sources":["api/city/city.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","jsonpatch","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","City","find","exec","catch","findById","params","id","body","_id","workshops","length","count","findOneAndUpdate","new","setDefaultsOnInsert","runValidators"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;;;;;QAwDgBA,K,GAAAA,K;QAOAC,I,GAAAA,I;QAQAC,M,GAAAA,M;QAOAC,M,GAAAA,M;QAyBAC,K,GAAAA,K;QAYAC,O,GAAAA,O;;AAjHhB;;;;AACA;;;;;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOF,IAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B,CAAP;AACD;AACD,WAAO,IAAP;AACD,GALD;AAMD;;AAED,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAASJ,MAAT,EAAiB;AACtB,QAAI;AACFK,8BAAUC,KAAV,CAAgBN,MAAhB,EAAwBI,OAAxB,EAAiC,YAAa,IAA9C;AACD,KAFD,CAEE,OAAMG,GAAN,EAAW;AACX,aAAO,kBAAQC,MAAR,CAAeD,GAAf,CAAP;AACD;;AAED,WAAOP,OAAOS,IAAP,EAAP;AACD,GARD;AASD;;AAED,SAASC,YAAT,CAAsBZ,GAAtB,EAA2B;AACzB,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOA,OAAOW,MAAP,GACJC,IADI,CACC,YAAM;AACVd,YAAIG,MAAJ,CAAW,GAAX,EAAgBY,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAASC,oBAAT,CAA8BhB,GAA9B,EAAmC;AACjC,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAG,CAACA,MAAJ,EAAY;AACVF,UAAIG,MAAJ,CAAW,GAAX,EAAgBY,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOb,MAAP;AACD,GAND;AAOD;;AAED,SAASe,WAAT,CAAqBjB,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASQ,GAAT,EAAc;AACnBT,QAAIG,MAAJ,CAAWF,UAAX,EAAuBiB,IAAvB,CAA4BT,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAAShB,KAAT,CAAe0B,GAAf,EAAoBnB,GAApB,EAAyB;AAC9B,SAAOoB,eAAKC,IAAL,GAAYC,IAAZ,GACJR,IADI,CACCf,kBAAkBC,GAAlB,CADD,EAEJuB,KAFI,CAEEN,YAAYjB,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASN,IAAT,CAAcyB,GAAd,EAAmBnB,GAAnB,EAAwB;AAC7B,SAAOoB,eAAKI,QAAL,CAAcL,IAAIM,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJR,IADI,CACCE,qBAAqBhB,GAArB,CADD,EAEJc,IAFI,CAECf,kBAAkBC,GAAlB,CAFD,EAGJuB,KAHI,CAGEN,YAAYjB,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASL,MAAT,CAAgBwB,GAAhB,EAAqBnB,GAArB,EAA0B;AAC/B,SAAOoB,eAAKzB,MAAL,CAAYwB,IAAIQ,IAAhB,EACJb,IADI,CACCf,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJuB,KAFI,CAEEN,YAAYjB,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASJ,MAAT,CAAgBuB,GAAhB,EAAqBnB,GAArB,EAA0B;AAC/B,MAAGmB,IAAIQ,IAAJ,CAASC,GAAZ,EAAiB;AACf,WAAOT,IAAIQ,IAAJ,CAASC,GAAhB;AACD;;AAED,MAAGT,IAAIQ,IAAJ,CAASE,SAAT,CAAmBC,MAAnB,IAA2B,CAA9B,EAAgC;AAC9BX,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACD,GAFD,MAGK,IAAGZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmBC,MAAnB,IAA2B,CAA9B,EAAgC;AACnCX,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACAZ,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACD,GAHI,MAIA,IAAGZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmBC,MAAnB,IAA2B,CAA9B,EAAgC;AACnCX,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACAZ,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACAZ,QAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8BZ,IAAIQ,IAAJ,CAASE,SAAT,CAAmB,CAAnB,EAAsBE,KAAtB,GAA8B,CAA5D;AACD;;AAED,SAAOX,eAAKY,gBAAL,CAAsB,EAACJ,KAAKT,IAAIM,MAAJ,CAAWC,EAAjB,EAAtB,EAA4CP,IAAIQ,IAAhD,EAAsD,EAACM,KAAK,IAAN,EAAYrC,QAAQ,IAApB,EAA0BsC,qBAAqB,IAA/C,EAAqDC,eAAe,IAApE,EAAtD,EAAiIb,IAAjI,GAEJR,IAFI,CAECf,kBAAkBC,GAAlB,CAFD,EAGJuB,KAHI,CAGEN,YAAYjB,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASH,KAAT,CAAesB,GAAf,EAAoBnB,GAApB,EAAyB;AAC9B,MAAGmB,IAAIQ,IAAJ,CAASC,GAAZ,EAAiB;AACf,WAAOT,IAAIQ,IAAJ,CAASC,GAAhB;AACD;AACD,SAAOR,eAAKI,QAAL,CAAcL,IAAIM,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJR,IADI,CACCE,qBAAqBhB,GAArB,CADD,EAEJc,IAFI,CAECT,aAAac,IAAIQ,IAAjB,CAFD,EAGJb,IAHI,CAGCf,kBAAkBC,GAAlB,CAHD,EAIJuB,KAJI,CAIEN,YAAYjB,GAAZ,CAJF,CAAP;AAKD;;AAED;AACO,SAASF,OAAT,CAAiBqB,GAAjB,EAAsBnB,GAAtB,EAA2B;AAChC,SAAOoB,eAAKI,QAAL,CAAcL,IAAIM,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJR,IADI,CACCE,qBAAqBhB,GAArB,CADD,EAEJc,IAFI,CAECF,aAAaZ,GAAb,CAFD,EAGJuB,KAHI,CAGEN,YAAYjB,GAAZ,CAHF,CAAP;AAID","file":"city.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/citys              ->  index\n * POST    /api/citys              ->  create\n * GET     /api/citys/:id          ->  show\n * PUT     /api/citys/:id          ->  upsert\n * PATCH   /api/citys/:id          ->  patch\n * DELETE  /api/citys/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport City from './city.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Citys\nexport function index(req, res) {\n  return City.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single City from the DB\nexport function show(req, res) {\n  return City.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new City in the DB\nexport function create(req, res) {\n  return City.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given City in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  \n  if(req.body.workshops.length==1){\n    req.body.workshops[0].count = req.body.workshops[0].count + 1;\n  }\n  else if(req.body.workshops.length==2){\n    req.body.workshops[0].count = req.body.workshops[0].count + 1;\n    req.body.workshops[1].count = req.body.workshops[1].count + 1;\n  }\n  else if(req.body.workshops.length==3){\n    req.body.workshops[0].count = req.body.workshops[0].count + 1;\n    req.body.workshops[1].count = req.body.workshops[1].count + 1;\n    req.body.workshops[2].count = req.body.workshops[2].count + 1;\n  }\n\n  return City.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing City in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return City.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a City from the DB\nexport function destroy(req, res) {\n  return City.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}